<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Arsh Punia</title>
    <link>https://arshpunia.github.io/</link>
    <description>Recent content on Arsh Punia</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Aug 2022 23:36:40 -0400</lastBuildDate><atom:link href="https://arshpunia.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SQLite Notes</title>
      <link>https://arshpunia.github.io/posts/sqlite_learnings/</link>
      <pubDate>Thu, 18 Aug 2022 23:36:40 -0400</pubDate>
      
      <guid>https://arshpunia.github.io/posts/sqlite_learnings/</guid>
      <description>SQLite is an embedded database that is much loved by the developer community for its speed and relative simplicity. I finally got around to using it for a personal project and have documented (and maybe will keep documenting?) some of its idiosyncracies as I learn them along the way.
Enabling Foreign Key Support From the SQLite documentation:
 Foreign key constraints are disabled by default (for backwards compatibility), so must be enabled separately for each database connection.</description>
    </item>
    
    <item>
      <title>CORS, Preflight Requests, and OPTIONS Method</title>
      <link>https://arshpunia.github.io/posts/http_options_request/</link>
      <pubDate>Sun, 24 Apr 2022 09:05:07 -0400</pubDate>
      
      <guid>https://arshpunia.github.io/posts/http_options_request/</guid>
      <description>Background In working on a .NET backend recently, we ran into the following error whenever a request was made from the browser:
Cross Origin Rrequest Blocked: The Same Origin Policy disallows reading the remote resource at &amp;lt;backend-deployment-url&amp;gt;. (Reason: CORS header &#39;Access-Control-Allow-Origin&#39; missing). Status Code: 405. It is worth noting that the GET/POST requests were wroking fine using curl.
CORS, Preflight Requests, and the curious case of 200 OK From the MDN Web Docs</description>
    </item>
    
    <item>
      <title>Video Player Prefabs in Unity</title>
      <link>https://arshpunia.github.io/posts/unityprefab/</link>
      <pubDate>Tue, 22 Feb 2022 18:22:14 -0500</pubDate>
      
      <guid>https://arshpunia.github.io/posts/unityprefab/</guid>
      <description>TL;DR  If you are instantiating multiple video players in Unity as Prefab objects, make sure you generate their respective RenderTexture&amp;rsquo;s at runtime.  RenderTexture API   Multiple VideoPlayer objects rendering onto the same texture may cause issues in use-cases where you need individual VideoPlayer objects to respond differently.  What Happened I recently had to build for the use-case where a single scene in Unity would contain multiple video players.</description>
    </item>
    
    <item>
      <title>Reads</title>
      <link>https://arshpunia.github.io/reads/</link>
      <pubDate>Thu, 17 Feb 2022 22:00:41 -0500</pubDate>
      
      <guid>https://arshpunia.github.io/reads/</guid>
      <description>I maintain a list of the content that I engage with or have enjoyed/been fascinated by at some point. Have a recommendation? Send me an email.
Books Non-Fiction  Slouching Towards Bethlehem The Innovators: How a Group of Hackers, Geniuses, and Geeks Created the Digital Revolution How to do Nothing: Resisting the Attention Economy The Everything Store: Jeff Bezos and the Age of Amazon The Inconvenient Indian: A Curious Account of Native People in North America The Attention Merchants: The Epic Scramble to Get Inside Our Heads The Curse of Bigness: Antitrust in the New Gilded Age Sahara Unveiled: A Journey Across the Desert Steal Like an Artist: 10 Things Nobody Told You About Being Creative Letters to a Young Contrarian The Big Short: Inside the Doomsday Machine Sandworm: A New Era of Cyberwar and the Hunt for the Kremlin&amp;rsquo;s Most Dangerous Hackers Bad Blood: Secrets and Lies in a Silicon Valley Startup Private Empire: ExxonMobil and American Power The Atomic Bazaar: Dispatches from the Underground World of Nuclear Trafficking  Fiction  The Dispossessed The Stranger Station Eleven Sea of Tranquility The Glass Hotel Turbulence Brave New World The Namesake: A Novel Interpreter of Maladies The Spy Who Came in from the Cold Exhalation Stories of Your Life and Others  People  Julia Evans Patrick McKenzie Patrick Collison Tyler Cowen Ava Dan Luu Dan Wang Simon Willison  Web  Hacker News Marginal Revolution Money Stuff - Bloomberg The Marginanial Architecture Notes ByteByteGo  </description>
    </item>
    
    
    <item>
      <title>S3 Presigned URLs and Unity</title>
      <link>https://arshpunia.github.io/posts/s3presignedurls/</link>
      <pubDate>Tue, 15 Feb 2022 23:03:27 -0500</pubDate>
      
      <guid>https://arshpunia.github.io/posts/s3presignedurls/</guid>
      <description>I recently learnt that you can share objects in private S3 buckets by using pre-signed URLs.
 The [S3] object owner can share objects with others by creating a presigned URL - using their own security credentials to grant time-limited permission to download the objects.
 Source: S3 User Guide
This functionality has been really useful in getting a VideoPlayer GameObject in Unity to directly play a video hosted on S3.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://arshpunia.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://arshpunia.github.io/about/</guid>
      <description>about</description>
    </item>
    
  </channel>
</rss>
