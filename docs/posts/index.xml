<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Arsh Punia</title>
    <link>https://arshpunia.github.io/posts/</link>
    <description>Recent content in Posts on Arsh Punia</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Apr 2022 09:05:07 -0400</lastBuildDate><atom:link href="https://arshpunia.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Http_options_request</title>
      <link>https://arshpunia.github.io/posts/http_options_request/</link>
      <pubDate>Sun, 24 Apr 2022 09:05:07 -0400</pubDate>
      
      <guid>https://arshpunia.github.io/posts/http_options_request/</guid>
      <description>Options Request and CORS Policies </description>
    </item>
    
    <item>
      <title>Video Player Prefabs in Unity</title>
      <link>https://arshpunia.github.io/posts/unityprefab/</link>
      <pubDate>Tue, 22 Feb 2022 18:22:14 -0500</pubDate>
      
      <guid>https://arshpunia.github.io/posts/unityprefab/</guid>
      <description>TL;DR  If you are instantiating multiple video players in Unity as Prefab objects, make sure you generate their respective RenderTexture&amp;rsquo;s at runtime.  RenderTexture API   Multiple VideoPlayer objects rendering onto the same texture may cause issues in use-cases where you need individual VideoPlayer objects to respond differently.  What Happened I recently had to build for the use-case where a single scene in Unity would contain multiple video players.</description>
    </item>
    
    <item>
      <title>S3 Presigned URLs and Unity</title>
      <link>https://arshpunia.github.io/posts/s3presignedurls/</link>
      <pubDate>Tue, 15 Feb 2022 23:03:27 -0500</pubDate>
      
      <guid>https://arshpunia.github.io/posts/s3presignedurls/</guid>
      <description>I recently learnt that you can share objects in private S3 buckets by using pre-signed URLs.
 The [S3] object owner can share objects with others by creating a presigned URL - using their own security credentials to grant time-limited permission to download the objects.
 Source: S3 User Guide
This functionality has been really useful in getting a VideoPlayer GameObject in Unity to directly play a video hosted on S3.</description>
    </item>
    
  </channel>
</rss>
